generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CUSTOMER
  SPECIALIST
  GUEST
}

enum UserStatus {
  INTERNSHIP
  PRACTICE
  SPECIALIST
}

enum InternshipStatus {
  INPROGRESS
  SUCCESSCOMPLETED
  BADCOMPELTED
}

enum StatusesForProject {
  COMPLETED
  INPROGRESS
  NOTSTARTED
  CHECK
  CANCEL
}

enum TaskStatus {
  NOTSTARTED
  INPROGRESS
  BLOCKED
  COMPLETED
  VERIFICATION
}

model User {
  id                   Int         @id @default(autoincrement())
  firstName            String?
  lastName             String?
  middleName           String?
  role                 Role        @default(SPECIALIST)
  login                String      @unique
  email                String?     @unique
  password             String
  phone                String?
  telegram             String?
  direction            String?
  position             String?
  status               UserStatus? @default(PRACTICE)
  study_group          String?
  plans                String?
  about                String?
  portfolio            String?
  note                 String?
  inn                  String?
  rate                 Int?
  snils                String?
  birthday             String?
  passport_data        String?
  registration_address String?
  living_address       String?
  requisites           String?
  npd_reference        String?
  projectId            Int?
  review_tasks         Task[]      @relation("TasksToReview")
  tasks                Task[]      @relation("TasksToComplete")
  own_projects         Project[]   @relation("OwnerToProject")
  projects             Project[]   @relation("UserToProject")
}

model Project {
  id              Int                @id @default(autoincrement())
  title           String
  owner           User?              @relation("OwnerToProject", fields: [owner_id], references: [id])
  owner_id        Int?
  director        String?
  customer        String
  contact_person  String
  contact_data    String
  description     String?
  service_name    String?
  document_number Int                @default(1)
  contract        String?
  contract_date   DateTime?
  technical_task  String?
  comment         String?
  start_date      DateTime?
  end_date        DateTime?
  tasks           Task[]
  organization_id Int?
  status          StatusesForProject @default(NOTSTARTED)
  users           User[]             @relation("UserToProject")
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  start_date  DateTime?
  end_date    DateTime?
  is_done     Boolean    @default(false)
  project     Project    @relation(fields: [project_id], references: [id])
  project_id  Int
  comment     String?
  reviewer    User?      @relation("TasksToReview", fields: [reviewer_id], references: [id])
  reviewer_id Int?
  executor    User?      @relation("TasksToComplete", fields: [executor_id], references: [id])
  executor_id Int?
  status      TaskStatus @default(NOTSTARTED)
  hours       Int        @default(0)
}
